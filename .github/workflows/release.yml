name: Release
on:
  push:
    branches: 
      - main
run-name: "Releasing , Triggered by ${{ github.actor }}"

jobs:
  release-job:
    permissions: 
      contents: write
      issues: write
      pull-requests: write
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 21
      - run: |
          npm ci
          npm test
          echo
      - name: Upload Coverage
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: CodeCoverage
          path: coverage
          retention-days: 10
      - name: Release it
        run: |
          npx semantic-release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

  docker-push-job:
    runs-on: ubuntu-22.04
    needs: release-job
    
    steps:
      - uses: actions/checkout@v4
      - run: |
          git pull origin main
      - run: |
          echo "IMG_VERSION=$(cat package.json | grep version | tr -d ' ' | cut -d ':' -f 2 | tr -d '"' | tr -d ',')" >> "$GITHUB_ENV"
      
      - name: Login to Docker hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        env:
          IMG_VERSION: ${{ env.IMG_VERSION }}
        with:
          images: sidhusaiprasanth/testapp
          tags: |
            type=semver,pattern={{version}},value=${{ env.IMG_VERSION }}
            type=semver,pattern={{major}}.{{minor}},value=${{ env.IMG_VERSION }}
      - name: Build and publish
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
      